# dockerâ€‘compose.dev.yml  â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev       # ðŸ‘ˆ uses the light dev image
    container_name: nextjs-dev
    command: npm run dev               # Fast Refresh + TS checks
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=mysql://root:${MYSQL_PASSWORD}@db:3306/scrum-poker
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - AUTH_SECRET=${AUTH_SECRET}
      - AUTH_ATLASSIAN_ID=${AUTH_ATLASSIAN_ID}
      - AUTH_ATLASSIAN_SECRET=${AUTH_ATLASSIAN_SECRET}
      - ATLASSIAN_API_TOKEN=${ATLASSIAN_API_TOKEN}
    volumes:
      - .:/app          # live code â†’ container
      - /app/node_modules

  db:
    image: mysql:8
    container_name: mysql-dev
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD:-root}
      MYSQL_DATABASE: scrum-poker
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-proot"]
      interval: 10s
      retries: 5

  redis:
    image: redis:7
    container_name: redis-dev
    command: redis-server --requirepass ${REDIS_PASSWORD:-root!}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-root!}", "PING"]
      interval: 10s
      retries: 5

volumes:
  mysql_data:
  redis_data:
